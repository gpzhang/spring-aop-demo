<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd

       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:application.properties"/>

    <!--<context:component-scan base-package="com.demo.spring" annotation-config="false"/>-->
    <!--<context:annotation-config/>-->
    <!--或者可以只是用-->
    <context:component-scan base-package="com.demo.spring"/>


    <bean id="accessDdAop" class="com.demo.spring.aop.AccessDdAop"/>

    <!--aop:config中配置aop:pointcut和aop:aspect（切入点和切面）-->
    <!--proxy-target-class="false"使用jdk的动态代理 默认配置,proxy-target-class="true"使用cglib的动态代理-->
    <aop:config proxy-target-class="true">
        <!--< aop:aspect>定义切面，只需要定义一般的bean就行-->
        <aop:aspect ref="accessDdAop">
            <aop:pointcut id="inner-allMethod"
                          expression="execution(* com.demo.spring.impl.AccessMysqlServiceImpl.select())"/>
            <aop:before method="accessBefore" pointcut-ref="inner-allMethod"/>
            <aop:after method="accessAfter" pointcut-ref="inner-allMethod"/>
        </aop:aspect>
    </aop:config>


</beans>
