<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd

       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:application.properties"/>

    <!--<context:component-scan base-package="com.demo.spring" annotation-config="false"/>-->
    <!--<context:annotation-config/>-->
    <!--或者可以只是用-->
    <context:component-scan base-package="com.demo.spring"/>

    <bean id="demoDaoImpl" class="com.demo.spring.impl.AccessOracleServiceImpl"/>

    <!--实现具体的增强功能的切入点，方法前还是方法后-->
    <bean id="accessDbBeforeAdvice" class="com.demo.spring.aop.AccessDbBeforeAdvice"/>
    <bean id="accessDbAfterAdvice" class="com.demo.spring.aop.AccessDbAfterAdvice"/>

    <!--aop:config中配置aop:pointcut和aop:advisor（切入点和通知器）-->
    <!--proxy-target-class="false"使用jdk的动态代理 默认配置,proxy-target-class="true"使用cglib的动态代理-->
    <aop:config proxy-target-class="true">
        <!--如果使用aop:advisor配置,那么切面逻辑必须要实现advice接口才行!否则会失败!-->
        <!--指定切入点，即指定要增强的业务方法-->
        <aop:pointcut id="allMethod" expression="execution(* com.demo.spring.impl.AccessMysqlServiceImpl.*(..))"/>
        <!--定义通知器（通知器跟切面一样，也包括增强的功能和功能切点）,对指定的切入点加入指定增强功能-->
        <aop:advisor advice-ref="accessDbBeforeAdvice" pointcut-ref="allMethod"/>
        <aop:advisor advice-ref="accessDbAfterAdvice" pointcut-ref="allMethod"/>
    </aop:config>


</beans>
